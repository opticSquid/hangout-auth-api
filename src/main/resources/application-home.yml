spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/auth
    username: postgres
    password: PkNLm@#2357
  jpa:
    properties:
      hibernate:
        "[format_sql]": true
    hibernate:
      ddl-auto: update
    show-sql: true
  application:
    instance_id: ${random.value}
  cloud:
    consul:
      host: localhost
      port: 5500
      discovery:
        healthCheckPath: ${server.servlet.context-path}/actuator/health
        healthCheckInterval: 15s
        instanceId: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id}}
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: auth-service-group-server

logging:
  level:
    web: debug
    security: debug
    "[com.hangout.core]": info
    # traceID and spanId are predefined MDC keys - we want the logs to include them
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

# All traces should be sent to latency analysis tool
management:
  tracing:
    sampling:
      probability: 1.0
  endpoints:
    web:
      exposure:
        include: prometheus, health

  # For Exemplars to work we need histogram buckets
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true

